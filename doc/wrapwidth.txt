*wrapwidth.txt* Wraps long lines virtually at a specific column

Last Change: 2024/03/13
Version:     3.3
Author:      Rick Howe (Takumi Ohtani) <rdcxy754@ybb.ne.jp>
Copyright:   (c) 2023-2024 by Rick Howe
License:     MIT

-----------------------------------------------------------------------------
INTRODUCTION                                           *wrapwidth*

The 'wrap' option is useful but no way to select a column to be wrapped. And
the 'textwidth' and 'wrapmargin' options break a long line but it is hard
wrapped in insert mode.

    +------------------------------------------------------------+
    |  1 The "textwidth" option can be used to automatically brea|
    |    k a line before it gets too long. Set the "textwidth" op|
    |    tion to the desired maximum line length.                |
    |  2 If you then type more characters (not spaces or tabs), t|
    |    he last word will be put on a new line (unless it is the|
    |     only word on the line). If you set "textwidth" to 0, th|
    |     is feature is disabled.                                |
    +------------------------------------------------------------+

This plugin provides the `:Wrapwidth` command to set a column at which a
longer line will be virtually wrapped. When 'wrap' is on, the required number
of blank spaces are inserted as |virtual-text| at right edge of each screen
line.

    :Wrapwidth 50 (= Wrapwidth -6)
    +------------------------------------------------------------+
    |  1 The "textwidth" option can be used to automaticall      |
    |    y break a line before it gets too long. Set the "t      |
    |    extwidth" option to the desired maximum line lengt      |
    |    h.                                                      |
    |  2 If you then type more characters (not spaces or ta      |
    |    bs), the last word will be put on a new line (unle      |
    |    ss it is the only word on the line). If you set "t      |
    |    extwidth" to 0, this feature is disabled.               | 
    +------------------------------------------------------------+

While |wrapwidth| is enabled, those virtual spaces will be adjusted with
several options (such as 'linebreak', 'showbreak', 'number', 'numberwidth',
'foldcolumn', 'tabstop') as well as the change of text and window width, which
affect the way the text is visually displayed.

And you can set some of the |wrapwidth| specific options buffer-locally or
globally to see a wrap position sign and count number on each wrapped line.

    :set linebreak
    :let g:wrapwidth_sign='|'
    :let g:wrapwidth_number=1
    :Wrapwidth 50 (= Wrapwidth -6)
    +------------------------------------------------------------+
    |  1 The "textwidth" option can be used to             `|`    `1`|
    |    automatically break a line before it gets too     `|`    `2`|
    |    long. See the "textwidth" option to the desired   `|`    `3`|
    |    maximum line length.                                    |
    |  2 If you then type more characters (not spaces or   `|`    `1`|
    |    tabs), the last word will be put on a new line    `|`    `2`|
    |    (unless it is the only word on the line). If you  `|`    `3`|
    |    set "textwidth" to 0, this feature is disabled.         | 
    +------------------------------------------------------------+

If a file is big and not necessary to virtually wrap all lines at the same
column, it is possible to specify a range to set |wrapwidth| lines.

Note that the inline |virtual-text| feature has been implemented in vim
post-9.0 patches and nvim 0.10.0.

-----------------------------------------------------------------------------
COMMAND                                                *wrapwidth-command*

:[range]Wrapwidth N
    Set a |wrapwidth| at the N-th column in the current buffer. A longer line
    will be virtually wrapped at that column and continued to the next screen
    line. It is possible to specify |wrapwidth| lines in [range] (default: all
    lines) in a buffer.
    - N > 0: a text width from left edge of a text, like 'textwidth'
    - N < 0: a wrap margin from right edge of a window, like 'wrapmargin'
    - N = 0: disables the |wrapwidth|

:[range]Wrapwidth!
    Redraw the |wrapwidth| virtual spaces set in the current buffer (since
    patch 9.0.1762). It can be useful when those spaces are accidentally
    displaced by other virtual text than |wrapwidth|.

-----------------------------------------------------------------------------
OPTIONS                                                *wrapwidth-options*

|b:wrapwidth_hl|, |g:wrapwidth_hl|
    A highlight group to make |wrapwidth| virtual spaces visible (default:
    'NonText').

|b:wrapwidth_sign|, |g:wrapwidth_sign|
    A string to indicate the position of the wrap column in the virtual spaces
    (default: '').

|b:wrapwidth_number|, |g:wrapwidth_number|
    Enable (1) or disable (0) the count number to show on each of the wrapped
    line (default: 0).

-----------------------------------------------------------------------------
CHANGE HISTORY                                        *wrapwidth-history*

Update : 3.3
* Improved to automatically adjust the |wrapwidth| virtual spaces while typing
  in insert mode.
* Added |wrapwidth_sign| and |wrapwidth_number| options.

Update : 3.2
* Added ! flag to the `:Wrapwidth` command to redraw the |wrapwidth| virtual
  spaces for an accidental displacement.

Update : 3.1
* Improved to ignore as many series of |WinResized| events as possible and
  work smoothly while a window is being resized by mouse.
* Changed to keep the |wrapwidth| enabled unless the buffer is deleted. Those
  virtual spaces set in an alternate buffer will not be removed when toggled
  with CTRL-^ or "e: #".
* Fixed not to lose the virtual spaces when deleting and then undoing the
  |wrapwidth| lines.
* Fixed to prevent an error when deleting the last line where the |wrapwidth|
  is set.
* Fixed to wrap at the correct column position when 'linebreak' is on and
  several 'breakat' characters are included in a line.

Update : 3.0
* Added [range] to the `:Wrapwidth` command to specify and set more than one
  different sets of |wrapwidth| lines.
* Changed to show a single "extends" character at the wrap column in the
  virtual spaces when 'list' is on.
* Fixed to properly update the virtual spaces when some lines are added or
  deleted while editing.
* Fixed to adjust the virtual spaces immediately after entering in the window
  or the buffer.
* Fixed to clear all the specified |wrapwidth| lines, just as all the text
  properties are gone, when the buffer is unloaded in vim (not occur in nvim).

Update : 2.0
* Improved to check changed lines using a callback specified by
  |listener_add()| or |nvim_buf_attach()|, and update virtual spaces only on
  them while editing.

Update : 1.5
* Fixed to correctly show virtual spaces if the |wrapwidth| column is aligned
  on a <Tab> when 'list' is on.

Update : 1.4
* Changed not to show ">" and "^" of a multi-column character at the right
  edge of a window.
* Fixed to correctly wrap after a 'breakat' character when 'linebreak' is on.

Update : 1.3
* Fixed to adjust the virtual spaces after change of text in insert mode.
* Added to check the 'statuscolumn' option on nvim.

Update : 1.2
* Fixed not to incorrectly wrap a line when 'linebreak' is on.
* Improved to check a change of width on |WinScrolled| instead of |WinResized|
  to avoid unnecessary update of virtual spaces.

Update : 1.1
* Added a global or buffer local option to make virtual spaces visible.

 vim:tw=78:ts=8:ft=help:norl:
